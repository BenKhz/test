name: Rebase Dev onto Feature Branches

on:
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch:

jobs:
  rebase:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure latest GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Fetch all branches
        run: git fetch --all

      - name: List all open feature branches
        id: list_branches
        run: |
          git branch -r | grep 'origin/feature/' | sed 's|origin/||' > feature_branches.txt
          echo "branches=$(cat feature_branches.txt | tr '\n' ',' | sed 's/,$//')" >> $GITHUB_OUTPUT

      - name: Rebase dev onto each feature branch
        env:
          BRANCHES: ${{ steps.list_branches.outputs.branches }}
        run: |
          > rebase_failures.txt
          IFS=',' read -ra BRANCH_ARRAY <<< "$BRANCHES"
          for branch in "${BRANCH_ARRAY[@]}"; do
            echo "Processing $branch..."
            git checkout $branch
            if git rebase origin/dev; then
              git push origin $branch --force-with-lease
              echo "✅ Successfully rebased and pushed $branch"
            else
              echo "❌ Conflict detected in $branch"
              author_info=$(git log -1 --pretty=format:'%an <%ae>')
              echo "- Branch: $branch | Author: $author_info" >> rebase_failures.txt
              git rebase --abort
            fi
          done

      - name: Report rebase conflicts
        if: always()
        run: |
          if [ -s rebase_failures.txt ]; then
            echo "### 🚨 Rebase conflicts detected!" >> $GITHUB_STEP_SUMMARY
            cat rebase_failures.txt >> $GITHUB_STEP_SUMMARY
          else
            echo "### ✅ No rebase conflicts detected." >> $GITHUB_STEP_SUMMARY
          fi

      # Send Teams notification if conflicts detected
      # - name: Notify Teams about conflicts
      #   if: always() && env.TEAMS_WEBHOOK_URL && [ -s rebase_failures.txt ]
      #   env:
      #     TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
      #   run: |
      #     conflicts=$(cat rebase_failures.txt | sed ':a;N;$!ba;s/\n/\\n/g')
      #     payload='{
      #       "@type": "MessageCard",
      #       "@context": "https://schema.org/extensions",
      #       "themeColor": "FF0000",
      #       "summary": "Nightly Rebase Conflicts Detected",
      #       "title": "🚨 Nightly Rebase Conflicts Detected",
      #       "text": "'"$conflicts"'"
      #     }'
      #     curl -H "Content-Type: application/json" \
      #          -d "$payload" \
      #          $TEAMS_WEBHOOK_URL
